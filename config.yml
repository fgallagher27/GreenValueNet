# parameters.yml

default:

  chunksize: 100000

  target_grid: 1000

  land_use_legend:
    1: "broad_lf_wdlnd"
    2: "conif_wdlnd"
    3: "arable"
    4: "imp_grasslnd"
    5: "semi_nat_grasslnd"
    6: "calcereous_grassland"
    7: "calcereous_grassland"
    8: "calcereous_grassland"
    9: "mountain_hth_bog"
    10: "mountain_hth_bog"
    11: "mountain_hth_bog"
    12: "mountain_hth_bog"
    13: "saltwater"
    14: "freshwater"
    15: "coastal"
    16: "coastal"
    17: "coastal"
    18: "coastal"
    19: "coastal"
    20: "built_up"
    21: "built_up"
    255: "other"

  spatial_dict:
    coastline:
      folder: "processed_inputs"
      file: "coastline.shp"

    prim_school:
      folder: "processed_inputs"
      file: "primary_school.shp"

    sec_school:
      folder: "processed_inputs"
      file: "secondary_school.shp"
    
    roads:
      folder: "processed_inputs"
      file: "roads_c.shp"

    nat_park:
      folder: "raw_inputs"
      file: "National_Parks_(England)___Natural_England.shp"

    nat_trust:
      folder: "raw_inputs"
      file: "NT_Land_Always_Open.shp"
    
    rail_station:
      folder: "raw_inputs"
      file: "Railway_Stations.shp"
    
    ttwa:
      folder: "raw_inputs"
      file: "TTWA2011.shp"
  


  pre_processing:
  # TODO get func to be interpreted as a function in python
    postcodes:
      file_name: 'postcodes_c.shp'
      func: concat_postcodes

    roads:
      file_name: 'roads_c.shp'
      func: concat_roads
    
    coastline:
      file_name: 'coastline.shp'
      func: make_coastline

  mapped_postcodes:
    processed_file: 'mapped_postcodes.shp'

  house_prices:
    processed_file: 'house_prices_c.csv'

  spatial_attributes:
    processed_file: 'spatial_attributes_c.csv'
  
  land_use:
    processed_file: 'land_use_c.csv'